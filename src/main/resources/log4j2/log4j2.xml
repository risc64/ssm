<?xml version="1.0" encoding="UTF-8"?>
<!-- 日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->
<!-- Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，你会看到log4j2内部各种详细输出  -->
<!-- monitorInterval：Log4j能够自动检测修改配置 文件和重新配置本身，设置间隔秒数  -->
<Configuration status="WARN" monitorInterval="300">  
    <!-- 先定义所有的appender --> 
    <Appenders>
    	<!-- 控制台的配置 -->  
        <Console name="Console" target="SYSTEM_OUT">  
            <PatternLayout pattern = "[%d{HH:mm:ss:SSS}] [%p] - %l - %m%n" />  
        </Console>
        
        <!-- 这个会打印出所有的info及以下级别的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档 -->
        <RollingFile name="RollingFileInfo" fileName="${log4j2.fileName}"
        	filePattern="${log4j2.filePattern}">
        	<!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）-->
        	<ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>
        	<PatternLayout pattern="[%d{HH:mm:ss:SSS}] [%p] - %l - %m%n"/>
        	<Policies>
        		<TimeBasedTriggeringPolicy/>
        		<SizeBasedTriggeringPolicy size="10 MB"/>
        	</Policies>
        </RollingFile>
        
    </Appenders>  
    
  	<!--然后定义logger，只有定义了logger并引入的appender，appender才会生效-->
    <Loggers> 
		<!--过滤掉spring和mybatis的一些无用的DEBUG信息-->
		<logger name="org.springframework" level="WARN"></logger>
	    	<!-- <logger name="org.mybatis" level="DEBUG"></logger> -->
	    	<!-- 将业务dao接口填写进去,并用控制台输出即可 -->
        <logger name="com.llf.ssm.dao" level="WARN" additivity="false">
            <appender-ref ref="Console"/>
        </logger>
	    <root level="all">
			<appender-ref ref="Console"/>
	        <appender-ref ref="RollingFileInfo"/>

	        <!-- <appender-ref ref="RollingFileWarn"/>
	        <appender-ref ref="RollingFileError"/> -->
	    </root>  
    </Loggers>  
</Configuration>  